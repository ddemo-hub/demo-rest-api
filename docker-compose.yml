version: '3.9'

services:
  api:
    image: demo-rest-api:1.0
    container_name: demo-rest-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    networks:
      - 'local-network'
    environment:
      - spring.datasource.url=jdbc:mysql://${MYSQL_CONTAINER_NAME}:3306/${MYSQL_DB}
      - spring.datasource.username=${MYSQL_USER}
      - spring.datasource.password=${MYSQL_PASSWORD}
    depends_on:
      mysql-db:
        condition: service_healthy  # Wait for mysql to get completely ready

  mysql-db:
    image: mysql:8.0.28-oracle
    container_name: ${MYSQL_CONTAINER_NAME}
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - 'local-network'
    ports:
      - '3305:3306'
    volumes:
      - demo-mysql-data:/var/lib/demo-mysql-db
      - ./${MYSQL_ENTRYPOINT_INIT}:/docker-entrypoint-initdb.d/${MYSQL_ENTRYPOINT_INIT}:ro
    healthcheck:  # Make sure mysql is completely ready
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 5s

volumes:
  demo-mysql-data:

networks:
  local-network:
    driver: bridge
